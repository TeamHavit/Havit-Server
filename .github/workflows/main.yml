# This is a basic workflow to help you get started with Actions

name: firebase functions deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  main:
    runs-on: ubuntu-latest
    
    steps:
    
      - uses: actions/checkout@v2
      
      - name: create env file
        run: |
          cd functions
          touch .env
          echo "${{ secrets.DEV_WEB_HOOK_ERROR_MONITORING }}" >> .env
          echo "${{ secrets.DB_USER }}" >> .env
          echo "${{ secrets.DB_HOST }}" >> .env
          echo "${{ secrets.DB_DB }}" >> .env
          echo "${{ secrets.DB_PASSWORD }}" >> .env
          echo "${{ secrets.JWT_SECRET }}" >> .env
          echo "${{ secrets.TYPE }}" >> .env
          echo "${{ secrets.PRIVATE_KEY }}" >> .env
          echo "${{ secrets.PRIVATE_KEY_ID }}" >> .env
          echo "${{ secrets.CLIENT_EMAIL }}" >> .env
          echo "${{ secrets.CLIENT_ID }}" >> .env
          echo "${{ secrets.AUTH_URI }}" >> .env
          echo "${{ secrets.TOKEN_URI }}" >> .env
          echo "${{ secrets.AUTH_PROVIDER_CERT_URL }}" >> .env
          echo "${{ secrets.CLIENT_CERT_URL }}" >> .env
      
      - name: Install npm pacakges
        run: |
          cd functions
          npm install
          npm install -g firebase-tools
      
      - name: Deploy to Firebase
        run: |
          cd functions
          firebase deploy
        env: 
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
